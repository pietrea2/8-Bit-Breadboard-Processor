/*
 * Generated by Digital. Don't modify this file!
 * Any changes will be lost if this file is regenerated.
 */

// quad 2-input XOR gate
module \7486  (
  input \1A ,
  input \1B ,
  input \2A ,
  input \2B ,
  input \3B ,
  input \3A ,
  input \4A ,
  input \4B ,
  input VCC,
  input GND,
  output \1Y ,
  output \2Y ,
  output \3Y ,
  output \4Y 
);
  assign \1Y  = (\1A  ^ \1B );
  assign \2Y  = (\2A  ^ \2B );
  assign \3Y  = (\3A  ^ \3B );
  assign \4Y  = (\4A  ^ \4B );
endmodule
module DIG_Add
#(
    parameter Bits = 1
)
(
    input [(Bits-1):0] a,
    input [(Bits-1):0] b,
    input c_i,
    output [(Bits - 1):0] s,
    output c_o
);
   wire [Bits:0] temp;

   assign temp = a + b + c_i;
   assign s = temp [(Bits-1):0];
   assign c_o = temp[Bits];
endmodule



// 4-bit binary full adder, alternative pinning
module \74283  (
  input C0,
  input B1,
  input B2,
  input B3,
  input B4,
  input A1,
  input A2,
  input A3,
  input A4,
  input VCC,
  input GND,
  output S1,
  output S2,
  output S3,
  output S4,
  output C4
);
  wire [3:0] s0;
  wire [3:0] s5;
  wire [3:0] s6;
  assign s5[0] = B1;
  assign s5[1] = B2;
  assign s5[2] = B3;
  assign s5[3] = B4;
  assign s0[0] = A1;
  assign s0[1] = A2;
  assign s0[2] = A3;
  assign s0[3] = A4;
  DIG_Add #(
    .Bits(4)
  )
  DIG_Add_i0 (
    .a( s0 ),
    .b( s5 ),
    .c_i( C0 ),
    .s( s6 ),
    .c_o( C4 )
  );
  assign S1 = s6[0];
  assign S2 = s6[1];
  assign S3 = s6[2];
  assign S4 = s6[3];
endmodule

module ALU (
  input b0,
  input b1,
  input b2,
  input b3,
  input b4,
  input b5,
  input b6,
  input b7,
  input a0,
  input a1,
  input a2,
  input a3,
  input a4,
  input a5,
  input a6,
  input a7,
  input Subtract,
  output c7,
  output c6,
  output c5,
  output c4,
  output c3,
  output c2,
  output c1,
  output c0
);
  wire s0;
  wire s1;
  wire s2;
  wire s3;
  wire s4;
  wire s5;
  wire s6;
  wire s7;
  wire s8;
  \7486  \7486_i0 (
    .\1A ( b1 ),
    .\1B ( Subtract ),
    .\2A ( b0 ),
    .\2B ( Subtract ),
    .GND( 1'b0 ),
    .\3A ( Subtract ),
    .\3B ( b4 ),
    .\4A ( Subtract ),
    .\4B ( b5 ),
    .VCC( 1'b1 ),
    .\1Y ( s5 ),
    .\2Y ( s6 ),
    .\3Y ( s1 ),
    .\4Y ( s0 )
  );
  \7486  \7486_i1 (
    .\1A ( b3 ),
    .\1B ( Subtract ),
    .\2A ( b2 ),
    .\2B ( Subtract ),
    .GND( 1'b0 ),
    .\3A ( Subtract ),
    .\3B ( b6 ),
    .\4A ( Subtract ),
    .\4B ( b7 ),
    .VCC( 1'b1 ),
    .\1Y ( s7 ),
    .\2Y ( s8 ),
    .\3Y ( s4 ),
    .\4Y ( s3 )
  );
  \74283  \74283_i2 (
    .B2( s5 ),
    .A2( a1 ),
    .A1( a0 ),
    .B1( s6 ),
    .C0( Subtract ),
    .GND( 1'b0 ),
    .B4( s7 ),
    .A4( a3 ),
    .A3( a2 ),
    .B3( s8 ),
    .VCC( 1'b1 ),
    .S2( c1 ),
    .S1( c0 ),
    .C4( s2 ),
    .S4( c3 ),
    .S3( c2 )
  );
  \74283  \74283_i3 (
    .B2( s0 ),
    .A2( a5 ),
    .A1( a4 ),
    .B1( s1 ),
    .C0( s2 ),
    .GND( 1'b0 ),
    .B4( s3 ),
    .A4( a7 ),
    .A3( a6 ),
    .B3( s4 ),
    .VCC( 1'b1 ),
    .S2( c5 ),
    .S1( c4 ),
    .S4( c7 ),
    .S3( c6 )
  );
endmodule
