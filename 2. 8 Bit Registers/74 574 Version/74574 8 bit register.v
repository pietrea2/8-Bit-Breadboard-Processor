/*
 * Generated by Digital. Don't modify this file!
 * Any changes will be lost if this file is regenerated.
 */
module DIG_D_FF_Nbit
#(
    parameter Bits = 2,
    parameter Default = 0
)
(
   input [(Bits-1):0] D,
   input C,
   output [(Bits-1):0] Q,
   output [(Bits-1):0] \~Q
);
    reg [(Bits-1):0] state;

    assign Q = state;
    assign \~Q = ~state;

    always @ (posedge C) begin
        state <= D;
    end

    initial begin
        state = Default;
    end
endmodule


module DriverInvBus#(
    parameter Bits = 2
)
(
    input [(Bits-1):0] in,
    input sel,
    output [(Bits-1):0] out
);
    assign out = (sel == 1'b0)? in : {Bits{1'bz}};
endmodule

// octal positive-edge-triggered flip-flops, different pinout compared to 74374
module \74574  (
  input \~OC ,
  input CLK,
  input D0,
  input D1,
  input D2,
  input D3,
  input D4,
  input D5,
  input D6,
  input D7,
  input VCC,
  input GND,
  output Q0,
  output Q1,
  output Q2,
  output Q3,
  output Q4,
  output Q5,
  output Q6,
  output Q7
);
  wire [7:0] s0;
  wire [7:0] s1;
  wire [7:0] s2;
  assign s0[0] = D0;
  assign s0[1] = D1;
  assign s0[2] = D2;
  assign s0[3] = D3;
  assign s0[4] = D4;
  assign s0[5] = D5;
  assign s0[6] = D6;
  assign s0[7] = D7;
  DIG_D_FF_Nbit #(
    .Bits(8),
    .Default(0)
  )
  DIG_D_FF_Nbit_i0 (
    .D( s0 ),
    .C( CLK ),
    .Q( s1 )
  );
  DriverInvBus #(
    .Bits(8)
  )
  DriverInvBus_i1 (
    .in( s1 ),
    .sel( \~OC  ),
    .out( s2 )
  );
  assign Q0 = s2[0];
  assign Q1 = s2[1];
  assign Q2 = s2[2];
  assign Q3 = s2[3];
  assign Q4 = s2[4];
  assign Q5 = s2[5];
  assign Q6 = s2[6];
  assign Q7 = s2[7];
endmodule

module \74574_8_bit_register  (
  input d7,
  input d6,
  input d5,
  input d4,
  input d3,
  input d2,
  input d1,
  input d0,
  input \!Load ,
  input Clock,
  input Enable,
  output bus7,
  output bus6,
  output bus5,
  output bus4,
  output bus3,
  output bus2,
  output bus1,
  output bus0
);
  wire s0;
  wire s1;
  assign s1 = (~ \!Load  & Clock);
  assign s0 = ~ Enable;
  \74574  \74574_i0 (
    .\~OC ( s0 ),
    .D0( d0 ),
    .D1( d1 ),
    .D2( d2 ),
    .D3( d3 ),
    .D4( d4 ),
    .D5( d5 ),
    .D6( d6 ),
    .D7( d7 ),
    .GND( 1'b0 ),
    .CLK( s1 ),
    .VCC( 1'b1 ),
    .Q7( bus7 ),
    .Q6( bus6 ),
    .Q5( bus5 ),
    .Q4( bus4 ),
    .Q3( bus3 ),
    .Q2( bus2 ),
    .Q1( bus1 ),
    .Q0( bus0 )
  );
endmodule
